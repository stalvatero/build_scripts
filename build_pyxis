#!/bin/bash

set -e

export LC_ALL=C

## handle command line arguments
read -p "Do you want to sync? (y/N) " choice

# Initialize local repository
function init_local_repo() { 
    echo -e "\033[01;32m\n copy local manifest.xml... \033[0m"
    cp "$(dirname "$0")/local_manifest.xml" .repo/local_manifests/manifest.xml
}

# Initialize pe repository
function init_main_repo() {  
    echo -e "\033[01;32m\n init main repo... \033[0m"
	repo init -u https://github.com/PixelExperience/manifest -b ten-plus --depth=1
}

function sync_repo() {
    echo -e "\033[01;32m\n sync fetch repo... \033[0m"
	repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
}

function clone_or_checkout() {
    local dir="$1"
    local repo="$2"
    local branch="$3"

    if [[ -d "$dir" ]];then
        git -C "$dir" fetch https://github.com/raysenlau/"$repo" && git -C "$dir" checkout FETCH_HEAD
    else
        git clone https://github.com/raysenlau/"$repo" "$dir"
    fi
}

function sync_origin() {
	echo -e "\033[01;32m\n sync origin device tree... \033[0m"
	clone_or_checkout device/xiaomi/davinci android_device_xiaomi_davinci
	clone_or_checkout device/xiaomi/sm6150-common android_device_xiaomi_sm6150-common
}

function apply_patches() {
	echo -e "\033[01;32m\n applying patches... \033[0m"
    bash "$(dirname "$0")/apply-patches.sh" patches
}

function build_variant() {
	lunch aosp_davinci-userdebug
	make installclean
	mka bacon -j"${JOBS}"
}

if [[ $choice == *"y"* ]]; then
    init_local_repo
	init_main_repo	
	sync_repo
	sync_origin
	apply_patches
fi

echo -e "\033[01;32m\n###### Build Starting ###### \033[0m"

. build/envsetup.sh

build_variant

echo -e "\033[01;32m\n##### Build Completed ###### \033[0m"
